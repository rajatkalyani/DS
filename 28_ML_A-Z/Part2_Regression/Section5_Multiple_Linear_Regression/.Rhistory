# Simple Linear Regression
setwd('/Users/rajatpa/Documents/DS/ML_A-Z/Part2_Regression/Section4_Simple_Linear_Regression')
# Importing the dataset
dataset = read.csv('Salary_Data.csv')
# Splitting the dataset into the Training set and Test set
# install.packages('caTools')
library(caTools)
set.seed(123)
split = sample.split(dataset$Salary, SplitRatio = 2/3)
training_set = subset(dataset, split == TRUE)
test_set = subset(dataset, split == FALSE)
# Feature Scaling
# training_set = scale(training_set)
# test_set = scale(test_set)
# Fitting Simple Linear Regression to the Training set
regressor = lm(formula = Salary ~ YearsExperience,
data = training_set)
# Predicting the Test set results
y_pred = predict(regressor, newdata = test_set)
library("ggplot2", lib.loc="~/.conda/envs/Stats_ML/lib/R/library")
install.packages("ggplot2")
library(ggplot2)
# Multiple Linear Regression
setwd('/Users/rajatpa/Documents/DS/ML_A-Z/Part2_Regression/Section5_Multiple_Linear_Regression')
# Multiple Linear Regression
setwd('/Users/rajatpa/Documents/DS/ML_A-Z/Part2_Regression/Section5_Multiple_Linear_Regression')
# Importing the dataset
dataset = read.csv('50_Startups.csv')
# Multiple Linear Regression
setwd('/Users/rajatpa/Documents/DS/ML_A-Z/Part2_Regression/Section5_Multiple_Linear_Regression')
# Importing the dataset
dataset = read.csv('50_Startups.csv')
View(dataset)
View(dataset)
# Encoding categorical data
dataset$State = factor(dataset$State,
levels = c('New York', 'California', 'Florida'),
labels = c(1, 2, 3))
View(dataset)
# Splitting the dataset into the Training set and Test set
# install.packages('caTools')
library(caTools)
set.seed(123)
split = sample.split(dataset$Profit, SplitRatio = 0.8)
training_set = subset(dataset, split == TRUE)
test_set = subset(dataset, split == FALSE)
View(training_set)
# Feature Scaling
# training_set = scale(training_set)
# test_set = scale(test_set)
# Fitting Multiple Linear Regression to the Training set
regressor = lm(formula = Profit ~ .,
data = training_set)
# Predicting the Test set results
y_pred = predict(regressor, newdata = test_set)
# Multiple Linear Regression
setwd('/Users/rajatpa/Documents/DS/ML_A-Z/Part2_Regression/Section5_Multiple_Linear_Regression')
# Importing the dataset
dataset = read.csv('50_Startups.csv')
# Encoding categorical data
dataset$State = factor(dataset$State,
levels = c('New York', 'California', 'Florida'),
labels = c(1, 2, 3))
View(dataset)
View(dataset)
# Multiple Linear Regression
setwd('/Users/rajatpa/Documents/DS/ML_A-Z/Part2_Regression/Section5_Multiple_Linear_Regression')
# Importing the dataset
dataset = read.csv('50_Startups.csv')
View(dataset)
# Encoding categorical data
dataset$State = factor(dataset$State,
levels = c('New York', 'California', 'Florida'),
labels = c(1, 2, 3))
View(dataset)
# Splitting the dataset into the Training set and Test set
# install.packages('caTools')
library(caTools)
set.seed(123)
split = sample.split(dataset$Profit, SplitRatio = 0.8)
training_set = subset(dataset, split == TRUE)
test_set = subset(dataset, split == FALSE)
# Fitting Multiple Linear Regression to the Training set
regressor = lm(formula = Profit ~ .,
data = training_set)
# Predicting the Test set results
y_pred = predict(regressor, newdata = test_set)
y_pred
View(test_set)
View(dataset)
View(regressor)
summary(regressor)
# Multiple Linear Regression
setwd('/Users/rajatpa/Documents/DS/ML_A-Z/Part2_Regression/Section5_Multiple_Linear_Regression')
# Importing the dataset
dataset = read.csv('50_Startups.csv')
# Encoding categorical data
dataset$State = factor(dataset$State,
levels = c('New York', 'California', 'Florida'),
labels = c(1, 2, 3))
View(dataset)
# Multiple Linear Regression
setwd('/Users/rajatpa/Documents/DS/ML_A-Z/Part2_Regression/Section5_Multiple_Linear_Regression')
# Importing the dataset
dataset = read.csv('50_Startups.csv')
# Encoding categorical data
dataset$State = factor(dataset$State,
levels = c('New York', 'California', 'Florida'),
labels = c(1, 2, 3))
# Splitting the dataset into the Training set and Test set
# install.packages('caTools')
library(caTools)
set.seed(123)
split = sample.split(dataset$Profit, SplitRatio = 0.8)
training_set = subset(dataset, split == TRUE)
test_set = subset(dataset, split == FALSE)
View(dataset)
# Multiple Linear Regression
setwd('/Users/rajatpa/Documents/DS/ML_A-Z/Part2_Regression/Section5_Multiple_Linear_Regression')
# Importing the dataset
dataset = read.csv('50_Startups.csv')
# Encoding categorical data
dataset$State = factor(dataset$State,
levels = c('New York', 'California', 'Florida'),
labels = c(1, 2, 3))
# Splitting the dataset into the Training set and Test set
# install.packages('caTools')
library(caTools)
set.seed(123)
split = sample.split(dataset$Profit, SplitRatio = 0.8)
training_set = subset(dataset, split == TRUE)
test_set = subset(dataset, split == FALSE)
# Feature Scaling
# training_set = scale(training_set)
# test_set = scale(test_set)
# Fitting Multiple Linear Regression to the Training set
regressor = lm(formula = Profit ~ .,
data = training_set)
summary(regressor)
# Predicting the Test set results
y_pred = predict(regressor, newdata = test_set)
# Fitting Multiple Linear Regression using backward elemination process
regressor_ols = lm(formula = Profit ~ R.D.Spend + Administration + Marketing.Spend + State,
data = dataset)
summary(regressor_ols)
regressor_ols = lm(formula = Profit ~ R.D.Spend + Administration + Marketing.Spend,
data = dataset)
summary(regressor_ols)
# As we saw Administration feature has high P-value that is 0.602, need to remove that
regressor_ols = lm(formula = Profit ~ R.D.Spend + Marketing.Spend,
data = dataset)
summary(regressor_ols)
regressor_ols = lm(formula = Profit ~ R.D.Spend,
data = dataset)
summary(regressor_ols)
